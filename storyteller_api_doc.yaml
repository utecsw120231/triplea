openapi: 3.0.0
info:
  title: Story Teller API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: http://<domain>/
    description: API

paths:
  /user:
    post:
      summary: Registra un usuario
      description: Verificar que todos los campos del form de registro han sido llenados correctamente, y  verifica en la base de datos si ya existe el usuario.
      tags:
        - Users
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  username:
                    type: string
                  password:
                    type: string

      responses:
        '400':    # status code
          description: Alguno o varios de los campos recibidos están vacios.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Missing username

        '409':    # status code
          description: Ya existe un usuario que se ha registrado con el mismo email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Email is already registered

        '200':    # status code
          description: Registro y logueo realizados con éxiito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  email:
                    type: string
                    example: ntesla@gmail.com
                  name:
                    type: string
                    example: Ntesla
                  profile_picture:
                    type: string
                    example: https://picsum.photos/tesla.jpg
                  token:
                    type: string
                    example: 1234
  /user/login:
    post:
      summary: Maneja el logueo del usuario.
      description: Verificar que los parametros de logueo son correctos y realizar la consulta a la base de datos para obtener la información del usuario
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '400':    # status code
          description: Alguno o varios de los campos recibidos están vacios.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Missing type
        '500':    # status code
          description: Loguin con googleauth no implementado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Not implemented
        '404':    # status code
          description: El usuario ingresado no existe en la base de datos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: User not registered
        '401':    # status code
          description: Contraseña incorrecta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Wrong password
        '200':    # status code
          description: Logueo realizado con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  email:
                    type: string
                    example: ntesla@gmail.com
                  name:
                    type: string
                    example: Ntesla
                  profile_picture:
                    type: string
                    example: https://picsum.photos/tesla.jpg
                  token:
                    type: string
                    example: 1234

  /image/create:
    post:
      summary: Crea las imagenes a partir de una query
      description: Crea las imagenes con DALL-E y las guarda en la base de datos.
      tags:
        - Images
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: string
                    example: dall-e query
                  story_id:
                    type: integer
                  for_real:
                    type: boolean
                  n_images:
                    type: integer
                    example: 1

      responses:
        '400':    # status code
          description: Alguno o varios de los campos recibidos están vacios.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Missing query

        '409':    # status code
          description: No se encontró historia con la id dada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  msg:
                    type: string
                    example: Given `story_id` does not exist.

        '200':    # status code
          description: Se generaron las imagenes correctamente y se insertaron en la base de datos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  images:
                    type: array
                    items:
                      type: string
                    example: ["/image/hash1", "/image/hash2", ..., "/image/hashn"]

  /image/{image_hash}:
    get:
      summary: Devuelve la imagen con el hash especificado
      tags:
        - Images
      parameters:
        - in: path
          name: image_hash
          description: Hash de la imagen a obtener
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Envia un archivo png al cliente
          content:
            application/png:
              example: Imagen resultado

        '404':
          description: Imagen no encontrada asociada al usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: False
                  msg:
                    type: string
                    example: No such image.

  /image:
    get:
      summary: Retrieve images
      description: Devuelve las imágenes asociadas al usuario agrupadas por su `story_id`.
      tags:
        - Images

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  story_id:
                    type: array
                    items:
                      type: array
                      items:
                        oneOf:
                          - type: string
                            example: El lobo sopló con fuerza la casa de cemento
                          - type: integer
                            example: "/image/8acbf9051bca2f29b253fe6e241701f4dfee0ab0141c16c089b82de570f4e22b"

  /story:
    get:
      summary: Obtener historias
      description: Obtiene una lista de historias asociadas al usuario autenticado.
      tags:
        - Story query

      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  stories:
                    type: array
                    items:
                      type: array
                      items:
                        oneOf:
                          - type: integer
                            example: 1
                            description: story_id
                          - type: string
                            description: Nombre de historia
                            example: Title_1
                          - type: string
                            description: Fecha de creación
                            example: "Fri, 16 Jun 2023 15:09:58 GMT"

    post:
      summary: Crear historia
      description: Crea una nueva historia asociada al usuario autenticado
      tags:
        - Story query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Título de la historia a crear.

      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  story_id:
                    type: integer

  /story/prompts:
    post:
      summary: Crear consultas
      description: Crea consultas basadas en la historia proporcionada.
      tags:
        - Story query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story:
                  type: string
                  description: La historia para la cual generar las consultas.

      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  queries:
                    type: array
                    items:
                      type: string
                    example: [query1, query2, ..., queryn]

  /style:
    get:
      summary: Obtener estilos
      description: Obtiene una lista de estilos asociados al usuario autenticado.
      tags:
        - Style

      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  styles:
                    type: array
                    items:
                      type: string

    post:
      summary: Crear estilo
      description: Crea un nuevo estilo para el usuario autenticado.
      tags:
        - Style
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                style:
                  type: string
                  description: El estilo a crear.

      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
